# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cCQorkxW9uUCGp4E0TvBLv8kUb5ndtfd
"""

import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn import svm

class FakeAccClassifier():
  X_train = None
  y_train = None
  scaler = StandardScaler()
  clf = svm.NuSVC(max_iter=1500)

  def __init__(self):
    # Preprocess training data
    data_train = pd.read_csv('train.csv', header=None)
    ini_train = np.array(data_train.iloc[1:,:11])
    self.X_train = self.preprocess(ini_train, True)
    self.y_train = np.array(data_train.iloc[1:,11])

    # Fit model to data
    self.clf.fit(self.X_train, self.y_train)
  
  def predict(self, ar):
    # Standardize input (input should be [[]])
    star = self.scaler.transform(ar)

    # Get prediction from model
    tmp = self.clf.predict(star)
    tmp = tmp.astype(float)
    pred = tmp[0]

    if pred == 0: # real
      print("Real account")
      return 0
    else:
      print("Fake account")
      return 1

  def preprocess(self, ar, stand):
    new_data = np.zeros(11)
    new_data = np.reshape(new_data, (1, 11))
    
    for line in ar:
        new_line = line[0:11]
        new_line = np.reshape(new_line, (1, 11))
        new_data = np.append(new_data, new_line, axis=0)
    
    new_data = new_data[1:]
    
    if stand:
      new_data = self.scaler.fit_transform(new_data)
            
    return new_data

# clf = FakeAccClassifier()

# test = [[0, 0.9, 2, 0.4, 1, 5, 0, 0, 33, 142, 1000]] # This should be fake:1 (using graph data)
# test2 = [[1, 0, 1, 0, 0, 30, 0, 0, 36, 473, 472]] # This should be real:0 (personal account data)

# clf.predict(test2)